// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(USER)
  posts     Post[]
  comments  Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Post {
  id        String    @id @default(cuid())
  title     String
  content   String
  published Boolean   @default(false)
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("posts")
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("comments")
}

model AuditLog {
  id          String    @id @default(cuid())
  userId      String?   // Can be null for system actions
  actionType  String    // e.g., 'CREATE_POST', 'DELETE_COMMENT', 'USER_LOGIN_FAILED'
  entity      String    // e.g., 'Post', 'Comment', 'User'
  entityId    String?   // The ID of the affected entity
  oldValues   Json?     // Previous state of the data
  newValues   Json?     // New state of the data
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime  @default(now())

  @@map("audit_logs")
}

enum Role {
  USER
  ADMIN
  EDITOR
}
